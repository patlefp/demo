OOPs Basics
--------------
Object-A real world entity with properties and attributes
Class- Collection of Objects which share common properties and attributes
Message- Communication between classes and object(invocaton of method)
Method-Function

Use of OOPs-3R
-------------
R-Real World Programming
R-Reausablity
R-Resilience to Change

4 Pillars
-------------
	ABSTACTION
	ENCAPSULATION
	INHERITANCE
	POLYMORPHISM

Java is Platform Independent

MVC
-------
com.viwes
	Add EmployeeScreen
com.controllers
	
views 
controllers
models 
daos data acess obj


protected- acess in same package
default- acess in same package
private-only that class obj
public- acess all package




public class Employee
{
        private String empno;
        private String name;
        private String city;
        
        public Employee() {
            super();
            // TODO Auto-generated constructor stub
        }
        
        public Employee(String empno, String name, String city) {
            super();
            this.empno = empno;
            this.name = name;
            this.city = city;
        }

 

        @Override
        public String toString() {
            return "Employee [empno=" + empno + ", name=" + name + ", city=" + city + "]";
        }

 

        
        
}
 

public class ArrayDemo {

 

    public static void main(String[] args) {
    
        Employee e[]=new Employee[3];
        
        e[0]=new Employee("E001", "Jack", "Oak");
        e[1]=new Employee("E002", "Dev", "Mum");
        e[2]=new Employee("E003","Rishi","Chn");
        
        for(int x=0;x<e.length;x++)
        {
            System.out.println(e[x]);
        }
        //Enhanced For Loop
        for(Employee x : e)
        {
            System.out.println(x);
        }
    }

 

}



























